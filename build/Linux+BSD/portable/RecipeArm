#!/bin/bash

# This file is designed to run in debian jessie docker images

main() {

  set -e # Halt on error
  set -x # Be verbose

  case $1 in
    "--fetch-dependencies-only")
      fetchDependencies
      ;;
    "--build-only")
      shift #need to adjust parameter list so $makefile_overrides start at $1
      build
      ;;
    "--package-only")
      package
      ;;
    *)
      fetchDependencies;
      build;
      package;
  esac

  echo 'RecipeARM completed'
}

##########################################################################
# The dependences that musescore needs? to run, to include in package
##########################################################################
fetchDependencies() {
  echo 'fetching'

  echo `apt-get install -y libqt4-dev libsndfile1-dev libasound2-ev portaudio19-dev zlib1g-dev libfreetype6-dev libssl-dev libdrm-dev libgl1-mesa-dev libpulse-dev qtbase5-dev qttools5-dev libqt5multimedia5 libqt5multimediawidgets5 libqt5positioning5 libqt5sensors5 libqt5webkit5 qt5-image-formats-plugins qml-module-qtquick-controls libicu52 libpulse0 libjson-c-dev libexpat1-dev libdbus-1-3 libglib2.0-0 libkeyutils-dev libwrap0 libacl1 libreadline6 libbz2-1.0 libpcre3`

}

########################################################
# BUILD MuseScore PORTABLE (Compile, not package)
########################################################
build() {
  `echo 'building'

  cd MuseScore

  cp build/Linux+BSD/arm-linux-gnueabihf-pkg-config /usr/bin/
  export LD_LIBRARY_PATH="/usr/lib/arm-linux-gnueabihf:/usr/lib/arm-linux-gnueabihf/pulseaudio:/lib/arm-linux-gnueabihf"
  export PATH="/usr/bin/arm-linux-gnueabihf-pkg-config:/usr/bin/arm-linux-gnueabihf-strip:$PATH"
  export CMAKE_TOOLCHAIN_FILE=/MuseScore/build/Linux+BSD/jessie-crosscompile-armhf.cmake

  make revision
  make "$@" portable
}


##########################################################################
# PACKAGE INTO APPIMAGE WITH APPIMAGEKIT
##########################################################################
package() {
  echo 'packaging'

  appdir="$(cat MuseScore/build.release/PREFIX.txt)"
  appimage="$(echo "$appdir" | sed 's|\.AppDir$|.AppImage|')"

  cd AppImageKit-5/AppImageAssistant.AppDir

  ./package  "$appdir" "$appimage"

  # allow access to AppImage from outside the chroot
  chmod a+rwx "$appimage"
  parent_dir="$(dirname "$appimage")"
  while [ "$(dirname "$parent_dir")" != "$parent_dir" ]; do
    [ "$parent_dir" == "/" ] && break
    chmod a+rwx "$parent_dir"
    parent_dir="$(dirname "$parent_dir")"
  done

  ls -lh "$appimage"

}

main "$@"
